// Code generated by gowebx, DO AVOID EDIT.
package sms

import "github.com/ixugo/goweb/pkg/orm"

// DefaultMediaServerID 临时变量，待未来重构分布式流媒体时，移除
const DefaultMediaServerID = "local"

// MediaServer domain model
type MediaServer struct {
	ID                string           `gorm:"primaryKey" json:"id"`
	IP                string           `gorm:"column:ip;not null;default:''" json:"ip"`
	CreatedAt         orm.Time         `gorm:"column:created_at;not null;type:TIMESTAMP;default:CURRENT_TIMESTAMP" json:"created_at"`
	UpdatedAt         orm.Time         `gorm:"column:updated_at;not null;type:TIMESTAMP;default:CURRENT_TIMESTAMP" json:"updated_at"`
	HookIP            string           `gorm:"column:hook_ip;not null;default:''" json:"hook_ip"`
	SDPIP             string           `gorm:"column:sdpip;not null;default:''" json:"sdp_ip"`
	StreamIP          string           `gorm:"column:stream_ip;not null;default:''" json:"stream_ip"`
	Ports             MediaServerPorts `gorm:"column:ports;not null;type:JSON" json:"ports"`
	AutoConfig        bool             `gorm:"column:auto_config;not null;default:FALSE" json:"auto_config"`
	Secret            string           `gorm:"column:secret;not null;default:''" json:"secret"`
	HookAliveInterval int              `gorm:"column:hook_alive_interval;not null;default:0" json:"hook_alive_interval"`
	RTPEnable         bool             `gorm:"column:rtpenable;not null;default:FALSE" json:"rtpenable"`
	Status            bool             `gorm:"column:status;not null;default:FALSE" json:"status"`
	RTPPortRange      string           `gorm:"column:rtpport_range;not null;default:''" json:"rtpport_range"`
	SendRTPPortRange  string           `gorm:"column:send_rtpport_range;not null;default:''" json:"send_rtpport_range"`
	RecordAssistPort  int              `gorm:"column:record_assist_port;not null;default:0" json:"record_assist_port"`
	LastKeepaliveAt   orm.Time         `gorm:"column:last_keepalive_at;not null;type:TIMESTAMP;default:CURRENT_TIMESTAMP" json:"last_keepalive_at"`
	RecordDay         int              `gorm:"column:record_day;not null;default:0" json:"record_day"`
	RecordPath        string           `gorm:"column:record_path;not null;default:''" json:"record_path"`
	Type              string           `gorm:"column:type;not null;default:''" json:"type"`
	TranscodeSuffix   string           `gorm:"column:transcode_suffix;not null;default:''" json:"transcode_suffix"`
}

// TableName database table name
func (*MediaServer) TableName() string {
	return "media_servers"
}

func (m *MediaServer) GetSDPIP() string {
	if m.SDPIP != "" {
		return m.SDPIP
	}
	return m.IP
}
